/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Issue {
    expand?: string;
    id?: string;
    self?: string;
    key?: string;
    fields?: { [id: string] : any; };
    renderedFields?: {};
    properties?: Properties;
    names?: {};
    schema?: {};
    transitions?: Transition[];
    operations?: Opsbar;
    editmeta?: EditMeta;
    changelog?: Changelog;
    versionedRepresentations?: {};
    fieldsToInclude?: IncludedFields;
  }
  export interface Properties {
    properties?: {};
  }
  export interface Transition {
    id?: string;
    name?: string;
    to?: Status;
    fields?: {};
    expand?: string;
  }
  export interface Status {
    self?: string;
    statusColor?: string;
    description?: string;
    iconUrl?: string;
    name?: string;
    id?: string;
    statusCategory?: StatusCategory;
  }
  export interface StatusCategory {
    self?: string;
    id?: number;
    key?: string;
    colorName?: string;
    name?: string;
  }
  export interface Opsbar {
    linkGroups?: LinkGroup[];
  }
  export interface LinkGroup {
    id?: string;
    styleClass?: string;
    header?: SimpleLink;
    weight?: number;
    links?: SimpleLink[];
    groups?: LinkGroup[];
  }
  export interface SimpleLink {
    id?: string;
    styleClass?: string;
    iconClass?: string;
    label?: string;
    title?: string;
    href?: string;
    weight?: number;
  }
  export interface EditMeta {
    fields?: {};
  }
  export interface Changelog {
    startAt?: number;
    maxResults?: number;
    total?: number;
    histories?: ChangeHistory[];
  }
  export interface ChangeHistory {
    id?: string;
    author?: User;
    created?: string;
    items?: ChangeItem[];
    historyMetadata?: HistoryMetadata;
  }
  export interface User {
    self?: string;
    name?: string;
    key?: string;
    emailAddress?: string;
    avatarUrls?: {};
    displayName?: string;
    active: boolean;
    timeZone?: string;
  }
  export interface ChangeItem {
    field?: string;
    fieldtype?: string;
    from?: string;
    fromString?: string;
    to?: string;
    toString?: string;
  }
  export interface HistoryMetadata {
    type?: string;
    description?: string;
    descriptionKey?: string;
    activityDescription?: string;
    activityDescriptionKey?: string;
    emailDescription?: string;
    emailDescriptionKey?: string;
    actor?: HistoryMetadataParticipant;
    generator?: HistoryMetadataParticipant;
    cause?: HistoryMetadataParticipant;
    extraData?: {};
  }
  export interface HistoryMetadataParticipant {
    id?: string;
    displayName?: string;
    displayNameKey?: string;
    type?: string;
    avatarUrl?: string;
    url?: string;
  }
  export interface IncludedFields {
    [k: string]: any;
  }
  